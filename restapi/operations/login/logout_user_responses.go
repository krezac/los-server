// Code generated by go-swagger; DO NOT EDIT.

package login

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	models "github.com/krezac/los-server/models"
)

// LogoutUserOKCode is the HTTP code returned for type LogoutUserOK
const LogoutUserOKCode int = 200

/*LogoutUserOK successful operation

swagger:response logoutUserOK
*/
type LogoutUserOK struct {
}

// NewLogoutUserOK creates LogoutUserOK with default headers values
func NewLogoutUserOK() *LogoutUserOK {

	return &LogoutUserOK{}
}

// WriteResponse to the client
func (o *LogoutUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// LogoutUserUnauthorizedCode is the HTTP code returned for type LogoutUserUnauthorized
const LogoutUserUnauthorizedCode int = 401

/*LogoutUserUnauthorized Invalid token provided

swagger:response logoutUserUnauthorized
*/
type LogoutUserUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewLogoutUserUnauthorized creates LogoutUserUnauthorized with default headers values
func NewLogoutUserUnauthorized() *LogoutUserUnauthorized {

	return &LogoutUserUnauthorized{}
}

// WithPayload adds the payload to the logout user unauthorized response
func (o *LogoutUserUnauthorized) WithPayload(payload *models.APIResponse) *LogoutUserUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the logout user unauthorized response
func (o *LogoutUserUnauthorized) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LogoutUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
